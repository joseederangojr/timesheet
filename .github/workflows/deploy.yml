name: deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to deploy (leave empty for latest release)"
        required: false
        type: string
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Deploy to via SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          RELEASE_TAG: ${{ github.event.inputs.tag || github.event.release.tag_name }}
          SSH_DEPLOY_PATH: ${{ secrets.SSH_DEPLOY_PATH }}
          SSH_APP_PATH: ${{ secrets.SSH_APP_PATH }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          APP_NAME: ${{ vars.APP_NAME }}
          APP_ENV: ${{ vars.APP_ENV }}
          APP_KEY: ${{ vars.APP_KEY }}
          APP_DEBUG: ${{ vars.APP_DEBUG }}
          APP_URL: ${{ vars.APP_URL }}
          APP_LOCALE: ${{ vars.APP_LOCALE }}
          APP_FALLBACK_LOCALE: ${{ vars.APP_FALLBACK_LOCALE }}
          APP_FAKER_LOCALE: ${{ vars.APP_FAKER_LOCALE }}
          APP_MAINTENANCE_DRIVER: ${{ vars.APP_MAINTENANCE_DRIVER }}
          BCRYPT_ROUNDS: ${{ vars.BCRYPT_ROUNDS }}
          LOG_CHANNEL: ${{ vars.LOG_CHANNEL }}
          LOG_STACK: ${{ vars.LOG_STACK }}
          LOG_DEPRECATIONS_CHANNEL: ${{ vars.LOG_DEPRECATIONS_CHANNEL }}
          LOG_LEVEL: ${{ vars.LOG_LEVEL }}
          DB_CONNECTION: ${{ vars.DB_CONNECTION }}
          DB_HOST: ${{ vars.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_DATABASE: ${{ vars.DB_DATABASE }}
          DB_USERNAME: ${{ vars.DB_USERNAME }}
          DB_PASSWORD: ${{ vars.DB_PASSWORD }}
          SESSION_DRIVER: ${{ vars.SESSION_DRIVER }}
          SESSION_LIFETIME: ${{ vars.SESSION_LIFETIME }}
          SESSION_ENCRYPT: ${{ vars.SESSION_ENCRYPT }}
          SESSION_PATH: ${{ vars.SESSION_PATH }}
          SESSION_DOMAIN: ${{ vars.SESSION_DOMAIN }}
          BROADCAST_CONNECTION: ${{ vars.BROADCAST_CONNECTION }}
          FILESYSTEM_DISK: ${{ vars.FILESYSTEM_DISK }}
          QUEUE_CONNECTION: ${{ vars.QUEUE_CONNECTION }}
          CACHE_STORE: ${{ vars.CACHE_STORE }}
          MAIL_MAILER: ${{ vars.MAIL_MAILER }}
          MAIL_SCHEME: ${{ vars.MAIL_SCHEME }}
          MAIL_HOST: ${{ vars.MAIL_HOST }}
          MAIL_PORT: ${{ vars.MAIL_PORT }}
          MAIL_USERNAME: ${{ vars.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ vars.MAIL_PASSWORD }}
          MAIL_FROM_ADDRESS: ${{ vars.MAIL_FROM_ADDRESS }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          envs: RELEASE_TAG,SSH_DEPLOY_PATH,SSH_APP_PATH,GITHUB_REPOSITORT,APP_NAME,APP_ENV,APP_KEY,APP_DEBUG,APP_URL,APP_LOCALE,APP_FALLBACK_LOCALE,APP_FAKER_LOCALE,APP_MAINTENANCE_DRIVER,BCRYPT_ROUNDS,LOG_CHANNEL,LOG_STACK,LOG_DEPRECATIONS_CHANNEL,LOG_LEVEL,DB_CONNECTION,DB_HOST,DB_PORT,DB_DATABASE,DB_USERNAME,DB_PASSWORD,SESSION_DRIVER,SESSION_LIFETIME,SESSION_ENCRYPT,SESSION_PATH,SESSION_DOMAIN,BROADCAST_CONNECTION,FILESYSTEM_DISK,QUEUE_CONNECTION,CACHE_STORE,MAIL_MAILER,MAIL_SCHEME,MAIL_HOST,MAIL_PORT,MAIL_USERNAME,MAIL_PASSWORD,MAIL_FROM_ADDRESS
          script_path: deploy.sh
