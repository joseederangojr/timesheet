name: tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"

      - name: Get Composer Cache Directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache npm Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Playwright System Dependencies
        run: npx playwright install-deps

      - name: Get Playwright version
        id: playwright-version
        run: echo "version=$(npm list playwright --depth=0 --json | jq -r '.dependencies.playwright.version // .devDependencies.playwright.version')" >> $GITHUB_OUTPUT

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install

      - name: Setup Laravel Environment and Test
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: |
          composer install --no-interaction --prefer-dist --optimize-autoloader
          npm ci
          cp .env.example .env
          rm .env.testing
          php artisan key:generate
          touch database/database.sqlite
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          chmod -R 777 storage bootstrap/cache
          npm run build
          php artisan migrate --force
          npm run format
          npm run lint
          npm run test:types
          vendor/bin/rector process
          vendor/bin/phpstan --memory-limit=2G
          npm run format:php
          vendor/bin/pint -p
          php artisan test --bail --parallel --testsuite=Unit
          php artisan test --bail --testsuite=Feature
          php artisan test --bail --testsuite=Browser

      - name: Store Browser Screenshots
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: browser-screenshots-${{ github.run_id }}
          path: |
            tests/Browser/Screenshots
          retention-days: 3
